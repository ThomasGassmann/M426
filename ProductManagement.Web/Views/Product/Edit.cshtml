@model EditProductViewModel
@{
    this.ViewData["Title"] = "Create";
}

<h2>Create Product</h2>
@using (this.Html.BeginForm())
{
    <div>
        <table>
            <tr>
                <td colspan="2">@this.Html.ValidationSummary()</td>
            </tr>
            @if (!this.Model.Id.HasValue)
            {
                <tr>
                    <td>@this.Html.LabelFor(x => x.SelectedStrategy)</td>
                    <td>
                        @this.Html.DropDownListFor(x => x.SelectedStrategy, new List<SelectListItem>
                        {
                            new SelectListItem { Text = "Select...", Value = "", Selected = true },
                            new SelectListItem { Text = "Food", Value = "Food" },
                            new SelectListItem { Text = "Electronics", Value = "Electronics" }
                        }, new { @class = "form-control create-form-input" })
                    </td>
                </tr>
            }
            <tr>
                <td>@this.Html.LabelFor(x => x.Title)</td>
                <td>@this.Html.EditorFor(x => x.Title, new { htmlAttributes = new { @class = "form-control create-form-input" } })</td>
            </tr>
            <tr>
                <td>@this.Html.LabelFor(x => x.Description)</td>
                <td>@this.Html.TextAreaFor(x => x.Description, new { @class = "form-control create-form-input" })</td>
            </tr>
            <tr>
                <td>@this.Html.LabelFor(x => x.Price)</td>
                <td>@this.Html.EditorFor(x => x.Price, new { htmlAttributes = new { @class = "form-control create-form-input", @type = "number", @min = "0", @step = "0.01" } })</td>
            </tr>
            <tr>
                <td></td>
                <td>
                    <input style="margin: 5px;" class="btn btn-default" type="submit" value="@(this.Model.Id.HasValue ? "Save Edit" : "Create")" />
                </td>
            </tr>
        </table>
    </div>
}